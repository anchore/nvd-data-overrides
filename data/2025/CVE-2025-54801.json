{
  "_annotation": {
    "cna": "github_m",
    "cve_id": "CVE-2025-54801",
    "description": "Fiber is an Express inspired web framework written in Go. In versions 2.52.8 and below, when using Fiber's Ctx.BodyParser to parse form data containing a large numeric key that represents a slice index (e.g., test.18446744073704), the application crashes due to an out-of-bounds slice allocation in the underlying schema decoder. The root cause is that the decoder attempts to allocate a slice of length idx + 1 without validating whether the index is within a safe or reasonable range. If the idx is excessively large, this leads to an integer overflow or memory exhaustion, causing a panic or crash. This is fixed in version 2.52.9.",
    "generated_from": "https://raw.githubusercontent.com/anchore/cve-data-enrichment/main/data/anchore/2025/CVE-2025-54801.json",
    "modified": "2025-08-05T23:33:28.221000+00:00",
    "published": "2025-08-05T23:33:28.221000+00:00",
    "reason": "Added CPE configurations because not yet analyzed by NVD.",
    "references": [
      "https://github.com/gofiber/fiber/commit/e115c08b8f059a4a031b492aa9eef0712411853d",
      "https://github.com/gofiber/fiber/security/advisories/GHSA-qx2q-88mx-vhg7"
    ]
  },
  "cve": {
    "configurations": [
      {
        "nodes": [
          {
            "cpeMatch": [
              {
                "criteria": "cpe:2.3:a:gofiber:fiber:*:*:*:*:*:go:*:*",
                "matchCriteriaId": "ABCB03A5-E695-43F0-B7B3-FC7C3D9B584F",
                "versionEndExcluding": "2.52.9",
                "vulnerable": true
              }
            ],
            "negate": false,
            "operator": "OR"
          }
        ]
      }
    ]
  }
}