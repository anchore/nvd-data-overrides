{
  "_annotation": {
    "cna": "github_m",
    "cve_id": "CVE-2025-46720",
    "description": "Keystone is a content management system for Node.js. Prior to version 6.5.0, `{field}.isFilterable` access control can be bypassed in `update` and `delete` mutations by adding additional unique filters. These filters can be used as an oracle to probe the existence or value of otherwise unreadable fields. Specifically, when a mutation includes a `where` clause with multiple unique filters (e.g. `id` and `email`), Keystone will attempt to match records even if filtering by the latter fields would normally be rejected by `field.isFilterable` or `list.defaultIsFilterable`. This can allow malicious actors to infer the presence of a particular field value when a filter is successful in returning a result. This affects any project relying on the default or dynamic `isFilterable` behavior (at the list or field level) to prevent external users from using the filtering of fields as a discovery mechanism. While this access control is respected during `findMany` operations, it was not completely enforced during `update` and `delete` mutations when accepting more than one unique `where` values in filters. This has no impact on projects using `isFilterable: false` or `defaultIsFilterable: false` for sensitive fields, or for those who have otherwise omitted filtering by these fields from their GraphQL schema. This issue has been patched in `@keystone-6/core` version 6.5.0. To mitigate this issue in older versions where patching is not a viable pathway, set `isFilterable: false` statically for relevant fields to prevent filtering by them earlier in the access control pipeline (that is, don't use functions); set `{field}.graphql.omit.read: true` for relevant fields, which implicitly removes filtering by these fields from the GraphQL schema; and/or deny `update` and `delete` operations for the relevant lists completely.",
    "generated_from": "https://raw.githubusercontent.com/anchore/cve-data-enrichment/main/data/anchore/2025/CVE-2025-46720.json",
    "modified": "2025-05-05T19:00:01.531000+00:00",
    "published": "2025-05-05T18:53:51.506000+00:00",
    "reason": "Added CPE configurations because not yet analyzed by NVD.",
    "references": [
      "https://github.com/keystonejs/keystone/security/advisories/GHSA-hg9m-67mm-7pg3"
    ]
  },
  "cve": {
    "configurations": [
      {
        "nodes": [
          {
            "cpeMatch": [
              {
                "criteria": "cpe:2.3:a:keystonejs:keystone:*:*:*:*:*:node.js:*:*",
                "matchCriteriaId": "0B4DF7B9-1E5D-42D3-B2DF-D983ED7EB582",
                "versionEndExcluding": "6.5.0",
                "vulnerable": true
              }
            ],
            "negate": false,
            "operator": "OR"
          }
        ]
      }
    ]
  }
}