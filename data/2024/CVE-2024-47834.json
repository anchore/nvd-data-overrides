{
  "_annotation": {
    "cna": "github_m",
    "cve_id": "CVE-2024-47834",
    "description": "GStreamer is a library for constructing graphs of media-handling components. An Use-After-Free read vulnerability has been discovered affecting the processing of CodecPrivate elements in Matroska streams. In the GST_MATROSKA_ID_CODECPRIVATE case within the gst_matroska_demux_parse_stream function, a data chunk is allocated using gst_ebml_read_binary. Later, the allocated memory is freed in the gst_matroska_track_free function, by the call to g_free (track->codec_priv). Finally, the freed memory is accessed in the caps_serialize function through gst_value_serialize_buffer. The freed memory will be accessed in the gst_value_serialize_buffer function. This results in a UAF read vulnerability, as the function tries to process memory that has already been freed. This vulnerability is fixed in 1.24.10.",
    "generated_from": "https://raw.githubusercontent.com/anchore/cve-data-enrichment/main/data/anchore/2024/CVE-2024-47834.json",
    "modified": "2024-12-11T21:15:31.525000+00:00",
    "published": "2024-12-11T19:18:04.069000+00:00",
    "reason": "Added CPE configurations because not yet analyzed by NVD.",
    "references": [
      "https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/8057.patch",
      "https://gstreamer.freedesktop.org/security/sa-2024-0030.html",
      "https://securitylab.github.com/advisories/GHSL-2024-280_Gstreamer/"
    ]
  },
  "cve": {
    "configurations": [
      {
        "nodes": [
          {
            "cpeMatch": [
              {
                "criteria": "cpe:2.3:a:gstreamer_project:gstreamer:*:*:*:*:*:*:*:*",
                "matchCriteriaId": "82BF8403-8CE2-4AFC-865F-FD40A77D20E0",
                "versionEndExcluding": "1.24.10",
                "vulnerable": true
              }
            ],
            "negate": false,
            "operator": "OR"
          }
        ]
      }
    ]
  }
}