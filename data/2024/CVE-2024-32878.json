{
  "_annotation": {
    "cna": "github_m",
    "cve_id": "CVE-2024-32878",
    "description": "Llama.cpp is LLM inference in C/C++. There is a use of uninitialized heap variable vulnerability in gguf_init_from_file, the code will free this uninitialized variable later. In a simple POC, it will directly cause a crash. If the file is carefully constructed, it may be possible to control this uninitialized value and cause arbitrary address free problems. This may further lead to be exploited. Causes llama.cpp to crash (DoS) and may even lead to arbitrary code execution (RCE). This vulnerability has been patched in commit b2740.",
    "generated_from": "https://raw.githubusercontent.com/anchore/cve-data-enrichment/main/data/anchore/2024/CVE-2024-32878.json",
    "reason": "Added CPE configurations because not yet analyzed by NVD.",
    "references": [
      "https://github.com/ggerganov/llama.cpp/releases/tag/b2749",
      "https://github.com/ggerganov/llama.cpp/security/advisories/GHSA-p5mv-gjc5-mwqv"
    ]
  },
  "cve": {
    "configurations": [
      {
        "nodes": [
          {
            "cpeMatch": [
              {
                "criteria": "cpe:2.3:a:ggerganov:llama.cpp:*:*:*:*:*:*:*:*",
                "matchCriteriaId": "B59E771F-0FDF-5EF3-AED5-41BF50F08AEF",
                "versionEndIncluding": "b2715",
                "vulnerable": true
              }
            ],
            "negate": false,
            "operator": "OR"
          },
          {
            "cpeMatch": [
              {
                "criteria": "cpe:2.3:a:ggml:llama.cpp:*:*:*:*:*:*:*:*",
                "matchCriteriaId": "9E822A92-B38F-5750-B313-38C60F9E0F6B",
                "versionEndIncluding": "b2715",
                "vulnerable": true
              }
            ],
            "negate": false,
            "operator": "OR"
          }
        ]
      }
    ]
  }
}